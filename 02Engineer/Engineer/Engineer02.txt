案例4:编写一个判断脚本
在 server0 上创建 /root/foo.sh 脚本
1)当运行/root/foo.sh redhat,输出为fedora
2)当运行/root/foo.sh fedora,输出为redhat
3)当没有任何参数或者参数不是 redhat 或者fedora时,
其错误输出产生以下信息: /root/foo.sh redhat|fedora

[root@server0 ~]# vim  /root/foo.sh
#!/bin/bash
# 判断$1参数的脚本
if [ $#  -eq  0 ];then       #判断用户是否输入参数
 echo '/root/foo.sh  redhat|fedora' >&2   #变成错误输出
 exit 3                     #脚本退出返回的状态值
elif [ $1 == redhat ];then  #判断是否为redhat
 echo fedora
elif [ $1 == fedora ];then  #判断是否为fedora
 echo redhat
else
 echo '/root/foo.sh  redhat|fedora' >&2  #变成错误输出
 exit 4   #脚本退出返回的状态值
fi

案例5:编写一个批量添加用户脚本
在 server0 上创建 /root/batchusers 脚本
1)此脚本要求提供用户名列表文件作为参数
2)如果没有提供参数,此脚本应该给出提示
 Usage: /root/batchusers,退出并返回相应值
3)如果提供一个不存在的文件,此脚本应该给出提
示 Input file not found,退出并返回相应值
4)新用户的登录Shell为 /bin/false,无需设置密码
5)用户列表测试文件:
 http://classroom/pub/materials/userlist

[root@server0 ~]# vim /root/userlist
duanwu
zhongqiu
zhsan
lisi
dc
[root@server0 ~]# vim  /root/batchusers 
#!/bin/bash
if  [ $# -eq 0 ];then                   #判断是否有参数
 echo  'Usage: /root/batchusers' >&2
 exit 2
elif [ -f  $1  ];then     #判断文件是否存在
 for  a  in $(cat $1)
 do
  useradd -s /bin/false  $a  &> /dev/null
  echo $a创建成功
 done
else
  echo 'Input file not found' >&2
  exit 3
fi
[root@server0 ~]# /root/batchusers  /root/userlist

###################################################
系统安全保护
SELinux安全机制
• Security-Enhanced Linux
– 美国NSA国家安全局主导开发,一套增强Linux系统安
全的强制访问控制体系
– 集成到Linux内核(2.6及以上)中运行
– RHEL7基于SELinux体系针对用户、进程、目录和文件
提供了预设的保护策略,以及管理工具

• SELinux的运行模式
– enforcing(强制)、permissive(宽松)
– disabled(彻底禁用)

 任何模式切换成disabled模式,都要经历重启

• 切换运行模式
– 临时切换:setenforce 1|0
– 固定配置:/etc/selinux/config 文件

虚拟机server0
[root@server0 ~]# getenforce      #查看当前的状态
[root@server0 ~]# setenforce  0   #临时修改为宽松模式 
[root@server0 ~]# getenforce 
[root@server0 ~]# vim /etc/selinux/config
SELinux=permissive

虚拟机desktop0
[root@desktop0 ~]# getenforce 
[root@desktop0 ~]# setenforce  0
[root@desktop0 ~]# getenforce 
[root@desktop0 ~]# vim /etc/selinux/config
SELinux=permissive

###############################################
配置用户环境  

alias别名设置
• 查看已设置的别名
– alias [别名名称]
• 定义新的别名
– alias 别名名称= '实际执行的命令行'
• 取消已设置的别名
– unalias [别名名称]


• 影响指定用户的 bash 解释环境
– ~/.bashrc,每次开启 bash 终端时生效
• 影响所有用户的 bash 解释环境
– /etc/bashrc,每次开启 bash 终端时生效

[root@server0 ~]# vim /root/.bashrc 
alias hello='echo hello'
[root@server0 ~]# vim  /home/student/.bashrc 
alias hi='echo hi'
[root@server0 ~]# vim /etc/bashrc 
alias dc='echo tc'

 新开一个终端验证
###############################################
虚拟机server0:搭建Web服务器

Web服务:提供网页内容

实现Web服务的软件:  httpd   Nginx   Tomcat
实现Web通信的协议: http(超文本传输协议)

1.安装httpd软件                                             
[root@server0 ~]# yum -y install httpd

2.重启程序(重启服务)
[root@server0 ~]# systemctl restart httpd

3.本机测试访问
[root@server0 ~]# firefox 172.25.0.11

4.书写自己的页面文件 
    默认存放路径:/var/www/html
    默认首页文件名称:index.html

[root@server0 ~]# vim /var/www/html/index.html
<marquee><font color=red><h1>NSD1906 haha
滚动            字体颜色            标题字体

[root@server0 ~]# firefox  172.25.0.11

##############################################
虚拟机server0:搭建FTP服务
FTP服务:传输数据
FTP协议:文件传输协议
实现FTP服务软件:vsftpd

 默认共享路径:/var/ftp

1.安装vsftpd软件
[root@server0 ~]# yum -y install vsftpd

2.重启程序(重启服务)
[root@server0 ~]# systemctl restart vsftpd
[root@server0 ~]# firefox ftp://172.25.0.11

#################################################
防火墙策略管理

    作用: 隔离  众多的策略,允许出站,严格控制入站

   硬件防火墙
   软件防火墙

firewalld服务基础
• 系统服务:firewalld
• 管理工具:firewall-cmd、firewall-config

##################################################
预设安全区域
• 根据所在的网络场所区分,预设保护规则集
– public:仅允许访问本机的ssh dhcp ping服务
– trusted:允许任何访问
– block:阻塞任何来访请求(明确拒绝,有回应客户端)
– drop:丢弃任何来访的数据包(没有回应,节省服务端资源)

根据数据包的源IP地址
  数据包: 源IP地址   目标IP地址  数据

防火墙判定原则:
1.查看数据包的源IP地址,然后查看自己所有的区域,那个区域中有该源IP地址的规则,则进入该区域

2.进入默认区域(public)
################################################
防火墙默认区域的修改
虚拟机server:
]# firewall-cmd --get-default-zone  #查看默认区域
虚拟机desktop:
]# ping 172.25.0.11  #可以通信,有回应
虚拟机server:
]# firewall-cmd --set-default-zone=block  #修改默认区域
]# firewall-cmd --get-default-zone 
虚拟机desktop:
]# ping 172.25.0.11  #不可以通信,有回应

虚拟机server:
]# firewall-cmd --set-default-zone=drop 
]# firewall-cmd --get-default-zone 
虚拟机desktop:
]# ping 172.25.0.11  #不可以通信,没有回应

################################################
互联网常见的协议:                                             
          http:超文本传输协议    默认端口:80
          https:安全的超文本传输协议     默认端口:443              
          DNS:域名解析协议  默认端口:53
          FTP:文件传输协议  默认端口:21
          tftp:简单的文件传输协议  默认端口:69
          telnet:远程管理协议(明文传输)  默认端口:23
          ssh:远程管理协议(加密传输)  默认端口:22
          SMTP:邮件协议(用户发邮件)  默认端口:25
          pop3:邮件协议(用户收邮件) 默认端口:110
          snmp:简单的网络管理协议 默认端口:161

防火墙区域添加允许的协议 
虚拟机server
]# firewall-cmd --set-default-zone=public  #修改默认区域 
]# firewall-cmd --zone=public --list-all  #查看区域规则
]# firewall-cmd --zone=public --add-service=ftp #添加协议
]# firewall-cmd --zone=public --add-service=http
]# firewall-cmd --zone=public --list-all

虚拟机desktop
[root@desktop0 ~]# firefox 172.25.0.11   #访问成功
[root@desktop0 ~]# firefox ftp://172.25.0.11  #访问成功
#####################################################
防火墙规则的永久设置
– 永久(permanent)
]# firewall-cmd  --reload    #重新加载防火墙所有配置
]# firewall-cmd --zone=public --list-all

]# firewall-cmd  --permanent  --zone=public --add-service=http
]# firewall-cmd  --permanent  --zone=public --add-service=ftp

]# firewall-cmd --zone=public --list-all
]# firewall-cmd --reload 

]# firewall-cmd --zone=public --list-all 

###################################################
单独拒绝虚拟机desktop访问
虚拟机server:将虚拟机desktop的IP地址写入block
]# firewall-cmd --zone=block  --add-source=172.25.0.10
]# firewall-cmd --zone=block  --list-all

虚拟机desktop:
]# firefox 172.25.0.11        #访问失败
]# firefox ftp://172.25.0.11   #访问失败

真机:
]# firefox 172.25.0.11          #可以进行访问
]# firefox ftp://172.25.0.11   #可以进行访问
                                       
虚拟机server: 删除规则               
]# firewall-cmd --zone=block --remove-source=172.25.0.10

虚拟机desktop:
]# firefox 172.25.0.11        #可以进行访问
]# firefox ftp://172.25.0.11    #可以进行访问
#####################################################

 端口: 协议或程序或服务的编号
         利用root可以改变端口,而且一个程序可以具备多个端口

     监听端口    

实现本机的端口映射
• 本地应用的端口重定向(端口1 --> 端口2)

客户端访问: firefox  172.25.0.11:5423--->172.25.0.11:80

虚拟机server:
]# firewall-cmd --permanent  --zone=public  
--add-forward-port=port=5423:proto=tcp:toport=80

]# firewall-cmd --reload
]# firewall-cmd --zone=public --list-all 

虚拟机desktop:
[root@desktop0 ~]# firefox 172.25.0.11:5423
###################################################








